name: 6 - (Lab11) Workflow CI/CD Advanced Terraform

on:
  push:
    branches:
      - Dev-Stan
  workflow_dispatch:

jobs:

  Terraform-Lint-Plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced         
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Run terraform fmt check
        run: |
          terraform fmt -check -diff ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced
        id: var_fmt_check
      
#       - name: Creation d'un Timestamp
#         if: ${{ failure() }}
#         run: | 
#           echo "::set-output name=today::$(date "+%Y/%m/%d-%H-%M-%S")"
#         id: var_timestamp
      
#       - name : Create Issue fmt
#         if: ${{ failure() }}
#         uses: actions-ecosystem/action-create-issue@v1
#         with:
#           github_token: ${{ secrets.github_token }}
#           title: Error Terraform fmt ${{ steps.var_timestamp.outputs.today }}
#           body: |
#             ## Error Terraform fmt
#             Erreur : ${{ steps.var_fmt_check.outputs.stdout }}
#           assignees: |
#             Pierre-Chesne
#           labels: |
#             Error Terraform

      - name: Terraform Plan
        run: |
          cd ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced
          terraform plan \
             -var 'AzureSubscriptionID=${{ secrets.SUBSCRIPTIONID }}' \
             -var 'AzureClientSecret=${{ secrets.CLIENTSECRET }}' \
             -var 'AzureClientID=${{ secrets.CLIENTID }}' \
             -var 'AzureTenandID=${{ secrets.TENANTID }}' \
             -lock=false -out=tf.plan
 

      - name: Installation Checkov
        run: | 
          cd ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced  
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt install python3.7
          sudo apt install python3-pip
          sudo python3.7 -m pip install -U checkov
          
      - name: Execution de checkov 
        run: |
          cd ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced
          pwd
          ls -lisa
          checkov -d . --framework terraform --soft-fail


      - name: Upload Artifact 
        uses: actions/upload-artifact@v3
        with:
          name: ArtifactTerraform
          path: ./Terraform//Lab11_Pipeline_CI_CD_Terraform_advanced/tf.plan

  Terraform-Apply:
    runs-on: ubuntu-latest
    needs: Terraform-Lint-Plan
    steps:
      - name: Checks-out du repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.7

      - name: Terraform Init
        run: |
          cd ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced    
          terraform init -backend-config="sas_token=${{ secrets.BACKENDSTORAGESASTOKEN }}"

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ArtifactTerraform
          path: ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced

      - name: Terraform Apply
        run: |
          cd ./Terraform/Lab11_Pipeline_CI_CD_Terraform_advanced
          terraform apply "tf.plan"       
